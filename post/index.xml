<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on DevCows</title>
    <link>http://www.devcows.com/post/</link>
    <description>Recent content in Posts on DevCows</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015 - 2016, DevCows; all rights reserved.</copyright>
    <lastBuildDate>Tue, 26 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.devcows.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Create an IPsec tunnel between 2 Mikrotik routers and dynamic public IPs</title>
      <link>http://www.devcows.com/post/create-an-ipsec-tunnel-between-2-mikrotik-routers-and-dynamic-public-ips/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/create-an-ipsec-tunnel-between-2-mikrotik-routers-and-dynamic-public-ips/</guid>
      <description>&lt;p&gt;In this post we are going to create an IPsec VPN tunnel between two remote sites using Mikrotik routers with dynamic public IPs . By default, Mikrotik does not allow to use FQDN (domain names) to setup an IPsec tunnel, so we are going to create some scripts to update the IPsec configuration whenever the local or remote IPs change.&lt;/p&gt;

&lt;p&gt;The network layout is as follows:&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/mikrotik-ipsec-1.png&#34; alt=&#34;Mikrotik IPsec&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;The first thing to take into account is that LAN addresses must be different between Site 1 and Site 2. In our example, Site 1 uses LAN 192.168.1.0/24, whereas Site 2 uses 192.168.2.0/24. You can replace these networks with the ones in your infrastructure.&lt;/p&gt;

&lt;p&gt;Another thing to consider is if your routers are behind a NAT. In this case you will have to make sure to forward port 500 (UDP) to the Mikrotik router.&lt;/p&gt;

&lt;p&gt;In order to configure the IPsec tunnel, we have to setup the proposal, the peer, and the policy. We are going to provide the commands to configure Site 1, so once you finish with the guide, start over reverting the source and destination LAN addresses to configure Site 2.&lt;/p&gt;

&lt;p&gt;First, let’s create an IPsec proposal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ip ipsec proposal add name=proposal1 auth-algorithms=md5 enc-algorithms=3des pfs-group=modp1024 disabled=no
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, let’s create the peer. Replace the “test” secret with whatever password you want to use. Leave the address as it is as we will update it later from a script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ip ipsec peer add address=10.0.0.2 port=500 auth-method=pre-shared-key secret=test send-initial-contact=yes nat-traversal=no proposal-check=obey hash-algorithm=md5 enc-algorithm=3des dh-group=modp1024 generate-policy=no comment=&amp;quot;myIPsec&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And, finally, let’s create a policy that will identify interesting traffic that should go through the IPsec tunnel. Again, let’s leave the “sa-src-address” and “sa-dst-address” as shown.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ip ipsec policy add action=encrypt disabled=no src-address=192.168.1.0/24 dst-address=192.168.2.0/24 level=require ipsec-protocols=esp protocol=all tunnel=yes sa-src-address=10.0.0.1 sa-dst-address=10.0.0.2 proposal=proposal1 comment=&amp;quot;myIPsec&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The IPsec portion is now configured in Site 1. But we need to add a couple of NAT rules to accept the IPsec traffic.&lt;/p&gt;

&lt;p&gt;The following NAT rule will allow us to reach IPs on the remote LAN from our local network. It is important that this rule is placed in the first position.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ip firewall nat add chain=srcnat src-address=192.168.1.0/24 dst-address=192.168.2.0/24 place-before=0 action=accept comment=&amp;quot;IPsec traffic NAT bypass&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add also this rule If we do not already have a NAT rule to masquerade internal traffic.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ip firewall nat add chain=srcnat src-address=192.168.1.0/24 place-before=1 action=masquerade comment=&amp;quot;Masquerade internal network&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, we need to create an account in a dynamic DNS service that will allow the remote site to always find out the other site’s public IP. In this guide we are using the No-IP.com service and provide scripts to update the IP of No-IP hosts. You are free to use whatever dynamic DNS service you want.&lt;/p&gt;

&lt;p&gt;Once you have created an account and a host for Site 1, go ahead and the following script to update the No-IP host and the IPsec policy in the event of an IP change.&lt;/p&gt;

&lt;p&gt;The script source is located here: &lt;a href=&#34;https://gist.github.com/adrianmo/e54fbcd2c9d3cce80260&#34;&gt;https://gist.github.com/adrianmo/e54fbcd2c9d3cce80260&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be more convenient to create the script from the UI, whether it is the web UI or Winbox. Enable “read”, “write”, and “test” policies, paste the script in the source field and replace the variables within the “Script Settings” section with your information. If you have followed the guide, leave the “IPsecComment” variable as it is. Replace the “WANInter” with the WAN interface that has the public IP of Site 1.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/mikrotik-ipsec-2.png&#34; alt=&#34;Mikrotik IPsec&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;You can run the script manually and check the logs to verify whether the No-IP host and the IPsec policy are updated successfully.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/log print
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we need to create an scheduler to run the script every time period. We considered that a 10 minute interval is quite balanced, but you can adjust it to your particular needs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/system scheduler add disabled=no interval=10m name=no-ip_ddns_scheduler on-event=”no-ip_ddns_update” policy=read,write,test start-date=jan/01/1970 start-time=00:00:01
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point Site 1 No-IP host should update automatically whenever its public IP changes and will also update the IPsec policy accordingly. Now we need to update Site 2 public IP in the IPsec peer and policy configuration, so create a No-IP host for Site 2 if you don’t have it already. Do not worry about the IP that this host is resolving to, it will be updated in Site 2 when we repeat the steps on Site 2.&lt;/p&gt;

&lt;p&gt;The script to update the IPsec peer and policy when Site 2 public IP changes can be found here: &lt;a href=&#34;https://gist.github.com/adrianmo/92e305123b521b7a4400&#34;&gt;https://gist.github.com/adrianmo/92e305123b521b7a4400&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, create a script from the UI and replace “RemoteNOIPHost” with the host name of Site 2.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/mikrotik-ipsec-3.png&#34; alt=&#34;Mikrotik IPsec&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;You can run the script manually and check the logs to verify that the IPsec peer and policy are updated successfully. For testing purposes, you can manually modify the IP from the No-IP control panel and verify that the script updates the IPsec configuration with the new IP.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/log print
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are now done with the configuration on Site 1, so it is time to move to Site 2 and go through it again configuring the IPs in the reverse order.&lt;/p&gt;

&lt;p&gt;If you feel so inclined, please let us know how it went and leave some feedback if you find it useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Homemade ambilight with Arduino and Kodi</title>
      <link>http://www.devcows.com/post/arduino-ambilight-xbmc/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/arduino-ambilight-xbmc/</guid>
      <description>

&lt;p&gt;The Ambilight system is a gadget for TV to enjoy the TV shows. The system is composed by a concrete RGB LEDs (25 or 50 LEDs) and the LEDs reproduce the border color from TV. This post explains how create a homemade Ambilight system and connect to TV with &lt;a href=&#34;http://kodi.tv&#34;&gt;Kodi&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;components&#34;&gt;Components&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;50 LEDS =&amp;gt; 2 x [12mm Diffused Thin Digital RGB LED Pixels (Strand of 25) - WS2801]: &lt;a href=&#34;http://www.ebay.es/itm/12mm-Round-5V-Digital-RGB-LED-Pixels-Strand-of-50-WS2801-Waterproof-IP65-/161453014817?pt=UK_Computing_Other_Computing_Networking&amp;amp;amp;hash=item2597597f21&#34;&gt;Link Ebay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arduino uno: &lt;a href=&#34;http://www.dx.com/p/uno-r3-atmega328p-uno-r3-development-board-deep-blue-285620&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Male + Female DC Power Converter Connector Adapters (Optional to connect leds): &lt;a href=&#34;http://www.dx.com/p/male-female-dc-power-converter-connector-adapters-w-terminal-blocks-for-cctv-camera-pair-105084#.VLwoWC7F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5V 2A Power Adapter Charger: &lt;a href=&#34;http://www.dx.com/p/5v-2a-power-adapter-charger-for-security-camera-scanner-black-5-5-x-2-1mm-eu-plug-159396#.VLwo2C7F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Total price: 100€ (approximately)&lt;/p&gt;

&lt;h2 id=&#34;connection-schema&#34;&gt;Connection_schema&lt;/h2&gt;


&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/ambilight_wiring-diagram.png&#34; alt=&#34;Ambilight5&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;h2 id=&#34;making-of&#34;&gt;Making_of&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;
      Soldering the array of 25 LEDs in one. After test the array:&lt;br /&gt;
      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/ambilight1.png&#34; alt=&#34;Ambilight1&#34; /&gt;
    
    
&lt;/figure&gt;


    &lt;/p&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;
      Prepare back LED support with TV shape (VESA and connectors). Fix LEDs in the support.&lt;br /&gt;
      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/ambilight2.png&#34; alt=&#34;Ambilight2&#34; /&gt;
    
    
&lt;/figure&gt;


    &lt;/p&gt;
  &lt;/li&gt;

  &lt;li&gt;
    &lt;p&gt;
      Install the LED support on TV back (VESA).&lt;br /&gt;
      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/ambilight3.png&#34; alt=&#34;Ambilight3&#34; /&gt;
    
    
&lt;/figure&gt;



      &lt;br /&gt;
      &lt;br /&gt;

      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/ambilight4.png&#34; alt=&#34;Ambilight4&#34; /&gt;
    
    
&lt;/figure&gt;


    &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kodi.tv/download&#34;&gt;Kodi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kodi.wiki/view/Add-on:XBMC_Boblight&#34;&gt;Boblight Xbmc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/boblight&#34;&gt;Boblight Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.adafruit.com/adalight-diy-ambient-tv-lighting/download-and-install&#34;&gt;Arduino code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tweaking4all.com/home-theatre/xbmc/boblight-config-maker&#34;&gt;Boblight config maker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;demos&#34;&gt;Demos&lt;/h2&gt;

&lt;p&gt;Video 1:
&lt;iframe frameborder=&#34;0&#34; height=&#34;450&#34; id=&#34;ytplayer&#34; src=&#34;http://www.youtube.com/embed/QiZHNcrvsQw&#34; type=&#34;text/html&#34; width=&#34;100%&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;Video 2:
&lt;iframe frameborder=&#34;0&#34; height=&#34;450&#34; id=&#34;ytplayer&#34; src=&#34;http://www.youtube.com/embed/eNhAsUhEIEE&#34; type=&#34;text/html&#34; width=&#34;100%&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Be sync with Raspberry Pi</title>
      <link>http://www.devcows.com/post/be-in-sync-with-raspberry/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/be-in-sync-with-raspberry/</guid>
      <description>

&lt;p&gt;Is very common have the necessity to sync some kind of information with other computers or have a synchronize backup. In this post we explain how to install &lt;a href=&#34;https://getsync.com&#34;&gt;Btsync&lt;/a&gt; into the Raspberry PI.&lt;/p&gt;

&lt;h2 id=&#34;download&#34;&gt;Download&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mkdir .btsync
cd .btsync
wget https://download-cdn.getsyncapp.com/stable/linux-arm/BitTorrent-Sync_arm.tar.gz
tar -xvf BitTorrent-Sync_arm.tar.gz
rm BitTorrent-Sync_arm.tar.gz

ln -s /lib/arm-linux-gnueabihf/ld-linux.so.3 /lib/ld-linux.so.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configure&#34;&gt;Configure&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cd ~/.btsync
./btsync --dump-sample-config &amp;gt; btsync.conf
# browse the sample config file and change what you want
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;start-at-boot&#34;&gt;Start at boot&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;nano /etc/init.d/btsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paste the following code in the script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/sh
# /etc/init.d/btsync
#

# Carry out specific functions when asked to by the system
case &amp;quot;$1&amp;quot; in
start)
    /home/osmc/.btsync/btsync --config /home/osmc/.btsync/btsync.conf
    ;;
stop)
    killall btsync
    ;;
*)
    echo &amp;quot;Usage: /etc/init.d/btsync {start|stop}&amp;quot;
    exit 1
    ;;
esac

exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then change the permissions, test, and register it to run at boot:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod 755 /etc/init.d/btsync
sudo /etc/init.d/btsync start       # test that the script starts
sudo /etc/init.d/btsync stop        # test that the script stops
sudo update-rc.d btsync defaults
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CONNECT AN EXTERNAL HDD (USB) TO RASPBERRY PI</title>
      <link>http://www.devcows.com/post/connect-an-external-hdd-usb-to-raspberry/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/connect-an-external-hdd-usb-to-raspberry/</guid>
      <description>&lt;p&gt;In &lt;code&gt;Raspberry Pi B&lt;/code&gt; model by default is limiting the output amperage. We can trick this behavior editing the config file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi /boot/config.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;safe_mode_gpio=4
max_usb_current=1   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reboot the raspberry and now you can plug the HDD in the usb port.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Update Deluge version on your Raspberry PI</title>
      <link>http://www.devcows.com/post/update-deluge-version-on-your-raspberry-pi/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/update-deluge-version-on-your-raspberry-pi/</guid>
      <description>

&lt;p&gt;Unfortunately, at the time of writing this post the latest version available from Raspbian repositories is 1.3.3. And you may not use other repositories since they will probably not provide packages for ARM devices such as the Raspberry PI.&lt;/p&gt;

&lt;p&gt;There are different reasons for updating Deluge to the latest version. One of them is that 1.3.3 does not support Magnet links, which is a very common way of loading in torrents to the client. Another reason might be fix the “Connection Failed. Check logs for details” when trying to configure the Deluge downloader on CouchPotato. This error occurs because Deluge updated its secure transport protocol in one of the newest versions.&lt;/p&gt;

&lt;h2 id=&#34;uninstall-any-previous-version-of-deluge&#34;&gt;Uninstall any previous version of Deluge&lt;/h2&gt;

&lt;p&gt;If you already have a previous version of Deluge installed, uninstall it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove deluged
sudo apt-get remove deluge-web
sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;download-and-install-the-newest-deluge-version&#34;&gt;Download and install the newest Deluge version&lt;/h2&gt;

&lt;p&gt;First, let’s stop Deluge in case it is still running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service deluge-daemon stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/deluge-daemon stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install a few dependencies needed to compile and run Deluge. Most of them will probably be already installed in your system.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python python-twisted python-twisted-web python-openssl python-simplejson python-setuptools intltool python-xdg python-chardet geoip-database python-libtorrent python-notify python-pygame python-glade2 librsvg2-common xdg-utils python-mako
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a folder where you will download Deluge on and cd into it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir deluge
cd deluge/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now download the latest version of Deluge from their website. At the time of writing the latest version was 1.3.11, but you can check for the a newer version here and update the URL from the following commands.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://download.deluge-torrent.org/source/deluge-1.3.11.tar.bz2
tar xvf deluge-1.3.11.tar.bz2
cd deluge-1.3.11/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s clean the build (just in case) and compile it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python setup.py clean -a
python setup.py build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can install the new version of Deluge.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo python setup.py install
sudo python setup.py install_data
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And delete the files we have downloaded and extracted since they are no longer needed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ../..
sudo rm -Rf deluge/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Verify that the new Deluge version is working fine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deluged
deluge-web
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go to &lt;code&gt;http://[raspberry_IP]:8112/&lt;/code&gt; and verify that you can see the Deluge web interface.&lt;/p&gt;

&lt;h2 id=&#34;configure-deluge-to-autostart-on-boot&#34;&gt;Configure Deluge to autostart on boot&lt;/h2&gt;

&lt;p&gt;Verify that you already have the following config file at &lt;code&gt;/etc/default/deluge-daemon&lt;/code&gt; with the content below or create it if you don’t have it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /etc/default/deluge-daemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the content.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Configuration for /etc/init.d/deluge-daemon

# The init.d script will only run if this variable is not empty.
DELUGED_USER=&amp;quot;pi&amp;quot;

# Should we run at startup?
RUN_AT_STARTUP=&amp;quot;YES&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You must also have the script to run the Deluge daemon and web UI as a Linux service. Let’s verify you have it there.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /etc/init.d/deluge-daemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don’t have it just download it into &lt;code&gt;/etc/init.d/&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo wget -O /etc/init.d/deluge-daemon http://cdn5.howtogeek.com/wp-content/uploads/gg/up/sshot5151aa042ad11.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fix the permissions of the init script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod 755 /etc/init.d/deluge-daemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And update the RC.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo update-rc.d deluge-daemon defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create the directories to keep the logs from the Deluge daemon and the web UI.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /var/log/deluge/daemon
sudo mkdir /var/log/deluge/web
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And give it permission to the pi user.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod -R 755 /var/log/deluge
sudo chown -R pi:pi /var/log/deluge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit the init script to modify a few lines.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /etc/init.d/deluge-daemon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &lt;code&gt;DAEMON1&lt;/code&gt;, &lt;code&gt;DAEMON1_ARGS&lt;/code&gt;, &lt;code&gt;DAEMON2&lt;/code&gt;, and &lt;code&gt;DAEMON2_ARGS&lt;/code&gt; variables by these ones.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DAEMON1=/usr/local/bin/deluged
DAEMON1_ARGS=&amp;quot;-d -L warning -l /var/log/deluge/daemon/warning.log&amp;quot;
DAEMON2=/usr/local/bin/deluge-web
DAEMON2_ARGS=&amp;quot;-L warning -l /var/log/deluge/web/warning.log&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart the service.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service deluge-daemon restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s set a logrotate rule to handle the Deluge logs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /etc/logrotate.d/deluge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And set the following content.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/var/log/deluge/*/*.log {
weekly
missingok
rotate 7
compress
notifempty
copytruncate
create 600
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make the Deluge web UI to automatically connect to the daemon&lt;/p&gt;

&lt;p&gt;To do that, we just need modify the config file of the web UI. But first, let’s stop the daemon.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service deluge-daemon stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, open the config file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /root/.config/deluge/web.conf
nano ~/.config/deluge/web.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And replace this line.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;“default_daemon”: “”,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By this one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;“default_daemon”: “127.0.0.1:58846″,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Deluge web interface will now automatically connect to the daemon.&lt;/p&gt;

&lt;h2 id=&#34;create-a-deluge-username-and-password-to-allow-access-to-other-apps&#34;&gt;Create a Deluge username and password to allow access to other apps&lt;/h2&gt;

&lt;p&gt;You may have other applications such as CouchPotato that integrate with Deluge to automatically load in Torrent files. To allow access to Deluge from external applications, you have to specify a username and password.&lt;/p&gt;

&lt;p&gt;First, let’s set the proper permissions to the directories and files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod 770 ~/.config/
sudo chmod 770 ~/.config/deluge
sudo chmod 660 ~/.config/deluge/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now append a new user and password to the auth file. Replace &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; with whatever values you want.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo username:password:10 &amp;gt;&amp;gt; ~/.config/deluge/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let’s restart the daemon for the change to take effect.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service deluge-daemon restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you feel so inclined, please let us know how it went and leave some feedback if you find it useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Meteodino monitoring temperature system</title>
      <link>http://www.devcows.com/post/arduino-meteodino-temperature/</link>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/arduino-meteodino-temperature/</guid>
      <description>

&lt;p&gt;A monitoring system for temperature and humidity. The system is composed by a gadget with sensors and a server to store the data. This project combines &lt;a href=&#34;http://en.wikipedia.org/wiki/Ruby_on_Rails&#34;&gt;Ruby on rails&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/AngularJS&#34;&gt;AngularJS&lt;/a&gt;, &lt;a href=&#34;http://coffeescript.org&#34;&gt;Coffescript&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/Arduino&#34;&gt;Arduino&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;carousel slide&#34; id=&#34;myCarousel&#34;&gt;
    &lt;ol class=&#34;carousel-indicators&#34;&gt;
        &lt;li class=&#34;active&#34; data-slide-to=&#34;0&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;1&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
    &lt;/ol&gt;

    &lt;div class=&#34;carousel-inner&#34;&gt;
        &lt;div class=&#34;item active&#34;&gt;
      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/meteodino1.jpg&#34; alt=&#34;Meteodino1&#34; /&gt;
    
    
&lt;/figure&gt;

           
        &lt;/div&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/meteodino2.png&#34; alt=&#34;Meteodino2&#34; /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;a class=&amp;quot;left carousel-control&amp;quot; data-slide=&amp;quot;prev&amp;quot; href=&amp;quot;#myCarousel&amp;quot; role=&amp;quot;button&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Previous&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;a class=&amp;quot;right carousel-control&amp;quot; data-slide=&amp;quot;next&amp;quot; href=&amp;quot;#myCarousel&amp;quot; role=&amp;quot;button&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Next&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;## Description&lt;/p&gt;

&lt;p&gt;## Server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API REST.&lt;/li&gt;
&lt;li&gt;Frontend with &lt;a href=&#34;http://en.wikipedia.org/wiki/AngularJS&#34;&gt;AngularJS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;temperature-gadget-arduino&#34;&gt;Temperature gadget =&amp;gt; Arduino&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Arduino Uno: &lt;a href=&#34;http://www.dx.com/p/uno-r3-atmega328p-uno-r3-development-board-deep-blue-285620#.VMk3V17F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arduino Ethernet Shield: &lt;a href=&#34;http://www.dx.com/p/ethernet-shield-v1-1-for-arduino-66908#.VMk3Tl7F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Temperature sensor (DHT-11): &lt;a href=&#34;http://www.dx.com/p/arduino-digital-temperature-humidity-sensor-module-121350#.VMk3UV7F9TA&#34;&gt;Link Dx&lt;/a&gt; (Shit, very imprecise)&lt;/li&gt;
&lt;li&gt;Temperature sensor (DHT-22): &lt;a href=&#34;http://www.dx.com/p/arduino-dht11-digital-temperature-humidity-sensor-138531&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LCD 16x2: &lt;a href=&#34;http://www.dx.com/p/16-x-2-character-lcd-display-module-with-blue-backlight-121356#.VMk3c17F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;## Temperature gadget =&amp;gt; Raspberry pi (coming soon)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry pi&lt;/li&gt;
&lt;li&gt;Temperature sensor (DHT-11): &lt;a href=&#34;http://www.dx.com/p/arduino-digital-temperature-humidity-sensor-module-121350#.VMk3UV7F9TA&#34;&gt;Link Dx&lt;/a&gt; (Shit, very imprecise)&lt;/li&gt;
&lt;li&gt;Temperature sensor (DHT-22): &lt;a href=&#34;http://www.dx.com/p/arduino-dht11-digital-temperature-humidity-sensor-138531&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LCD 16x2: &lt;a href=&#34;http://www.dx.com/p/16-x-2-character-lcd-display-module-with-blue-backlight-121356#.VMk3c17F9TA&#34;&gt;Link Dx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Demo at: &lt;a href=&#34;http://meteodino.guerreroibarra.com&#34;&gt;meteodino.guerreroibarra.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;## Remarks&lt;/p&gt;

&lt;p&gt;The web page is developed with &lt;a href=&#34;http://en.wikipedia.org/wiki/Ruby_on_Rails&#34;&gt;Ruby on Rails&lt;/a&gt; and &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt;. The web uses some interesting gems, we will explain some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://activeadmin.info&#34;&gt;Active Admin&lt;/a&gt; generates a complete backoffice for manage the web site.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuki24/did_you_mean&#34;&gt;Did you mean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ctran/annotate_models&#34;&gt;Annotate&lt;/a&gt; add a comment summarizing the current schema to the top or bottom of each of your models.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/voormedia/rails-erd&#34;&gt;Rails erd&lt;/a&gt; generates a class diagram.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/rubocop&#34;&gt;Rubocop&lt;/a&gt; is a Ruby static code analyzer. Out of the box it will enforce many of the guidelines outlined in the community Ruby Style Guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/devcows/meteodino&#34;&gt;GO TO REPOSITORY&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hal-cash finder (Android)</title>
      <link>http://www.devcows.com/post/hal-cash-finder-android/</link>
      <pubDate>Sat, 29 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/hal-cash-finder-android/</guid>
      <description>

&lt;p&gt;Hal-cash finder searches terminal banks compatibles with &lt;a href=&#34;http://www.halcash.com/es&#34;&gt;Hal-cash&lt;/a&gt; method using Hal-cash API and render in Google Maps.&lt;/p&gt;

&lt;div class=&#34;carousel slide&#34; id=&#34;myCarousel&#34;&gt;
    &lt;ol class=&#34;carousel-indicators&#34;&gt;
        &lt;li class=&#34;active&#34; data-slide-to=&#34;0&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;1&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;2&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;3&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;4&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;5&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
    &lt;/ol&gt;

    &lt;div class=&#34;carousel-inner&#34;&gt;
        &lt;div class=&#34;item active&#34;&gt;
            &lt;img class=&#34;img-responsive center-block&#34; src=&#34;http://www.devcows.com/ckeditor_assets/pictures/15/content_picture_1.png&#34; style=&#34;height: 400px;&#34;&gt;
        &lt;/div&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
        &amp;lt;img class=&amp;quot;img-responsive center-block&amp;quot; src=&amp;quot;/ckeditor_assets/pictures/12/content_picture_2.png&amp;quot; style=&amp;quot;height: 400px;&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
        &amp;lt;img class=&amp;quot;img-responsive center-block&amp;quot; src=&amp;quot;/ckeditor_assets/pictures/14/content_picture_3.png&amp;quot; style=&amp;quot;height: 400px;&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
        &amp;lt;img class=&amp;quot;img-responsive center-block&amp;quot; src=&amp;quot;/ckeditor_assets/pictures/13/content_picture_4.png&amp;quot; style=&amp;quot;height: 400px;&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
        &amp;lt;img class=&amp;quot;img-responsive center-block&amp;quot; src=&amp;quot;/ckeditor_assets/pictures/11/content_picture_5.png&amp;quot; style=&amp;quot;height: 400px;&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
        &amp;lt;img class=&amp;quot;img-responsive center-block&amp;quot; src=&amp;quot;/ckeditor_assets/pictures/10/content_picture_6.png&amp;quot; style=&amp;quot;height: 400px;&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;a class=&amp;quot;left carousel-control&amp;quot; data-slide=&amp;quot;prev&amp;quot; href=&amp;quot;#myCarousel&amp;quot; role=&amp;quot;button&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Previous&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;a class=&amp;quot;right carousel-control&amp;quot; data-slide=&amp;quot;next&amp;quot; href=&amp;quot;#myCarousel&amp;quot; role=&amp;quot;button&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Next&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;Hal-cash finder is an application that searches terminal banks compatibles with Hal-cash method nearest your position.&lt;/p&gt;

&lt;p&gt;With this application, you can do:
- &lt;strong&gt;With your position&lt;/strong&gt;: the application searches terminal banks automatically nearest your position.
- &lt;strong&gt;With an address&lt;/strong&gt;: you can put an address and the application finds terminal banks nearest.
- &lt;strong&gt;With finger&lt;/strong&gt;: you can hold down the map and the application searches nearest terminal banks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.devcows.hal_cash_finder&amp;amp;amp;hl=es&#34;&gt;GOOGLE PLAY&lt;/a&gt;&lt;/p&gt;

&lt;iframe frameborder=&#34;0&#34; height=&#34;450&#34; id=&#34;ytplayer&#34; src=&#34;http://www.youtube.com/embed/ULmzavHzv80&#34; type=&#34;text/html&#34; width=&#34;100%&#34;&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;remarks&#34;&gt;Remarks&lt;/h2&gt;

&lt;p&gt;This application uses libraries and implements different design patterns, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/stephanenicolas/robospice&#34;&gt;Robospice&lt;/a&gt;: This library implements asynchronous network request. Parses the JSON response to java classes.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Design patterns: &lt;a href=&#34;https://en.wikipedia.org/wiki/Observer_pattern&#34;&gt;Observer&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/Singleton_pattern&#34;&gt;Singleton&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Manuncios opensource (Android)</title>
      <link>http://www.devcows.com/post/manuncios-opensource-android/</link>
      <pubDate>Tue, 25 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.devcows.com/post/manuncios-opensource-android/</guid>
      <description>

&lt;p&gt;Manuncios is a native android application that finds offers in &lt;a href=&#34;http://www.milanuncios.com&#34;&gt;Milanuncios.com&lt;/a&gt; web page.&lt;/p&gt;

&lt;div class=&#34;carousel slide&#34; id=&#34;myCarousel&#34;&gt;
    &lt;ol class=&#34;carousel-indicators&#34;&gt;
        &lt;li class=&#34;active&#34; data-slide-to=&#34;0&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;1&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;2&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;3&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;4&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;5&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
        &lt;li data-slide-to=&#34;6&#34; data-target=&#34;#myCarousel&#34;&gt;&lt;/li&gt;
    &lt;/ol&gt;

    &lt;div class=&#34;carousel-inner&#34;&gt;
        &lt;div class=&#34;item active&#34;&gt;
      
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios1.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
        &lt;/div&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios2_category_list_1.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios3_category_list_2.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios4_list_offer_1.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios5_list_offer_2.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios6_advanced_searcher.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;item&amp;quot;&amp;gt;
  
&lt;figure class=&#34;img-responsive center-block&#34;&gt;
    
        &lt;img src=&#34;http://www.devcows.com/media/manuncios7_offer.png&#34;  /&gt;
    
    
&lt;/figure&gt;

           
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;a class=&amp;quot;left carousel-control&amp;quot; data-slide=&amp;quot;prev&amp;quot; href=&amp;quot;#myCarousel&amp;quot; role=&amp;quot;button&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Previous&amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a class=&#34;right carousel-control&#34; data-slide=&#34;next&#34; href=&#34;#myCarousel&#34; role=&#34;button&#34;&gt; &lt;span class=&#34;sr-only&#34;&gt;Next&lt;/span&gt; &lt;/a&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;In the application, you can do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Search&lt;/strong&gt;: you can search offers with different criteria as title, price or location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Order&lt;/strong&gt;: the offers can order by price or age.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Show&lt;/strong&gt;: click in the offer to see more in detail.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contact&lt;/strong&gt;: if you are interested in the offer you can contact with the seller.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In &lt;a href=&#34;http://www.milanuncios.com&#34;&gt;Milanuncios.com&lt;/a&gt; you can find different kind of objects, for example: new products o used in different categories like home, hobby and sports, electronic, etc.&lt;/p&gt;

&lt;iframe frameborder=&#34;0&#34; height=&#34;450&#34; id=&#34;ytplayer&#34; src=&#34;http://www.youtube.com/embed/S2Kg5AeTFRA&#34; type=&#34;text/html&#34; width=&#34;100%&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;## Remarks&lt;/p&gt;

&lt;p&gt;Compatible with android &amp;gt;= API 10 (2.3.3).
This application uses libraries and implements different design patterns, for example:
- &lt;a href=&#34;http://jsoup.org&#34;&gt;Jsoup&lt;/a&gt;: Java library to parse html code.
- Design patterns &lt;a href=&#34;http://en.wikipedia.org/wiki/Observer_pattern&#34;&gt;Observer&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/Singleton_pattern&#34;&gt;Singleton&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/devcows/manuncios-opensource/src/0ad59fd9b04770668d81eba26274a8679717eaec/app/app-release.apk?at=master&#34;&gt;DOWNLOAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/devcows/manuncios-opensource&#34;&gt;GO TO REPOSITORY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>